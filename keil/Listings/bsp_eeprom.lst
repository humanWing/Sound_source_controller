C51 COMPILER V9.60.0.0   BSP_EEPROM                                                        06/05/2023 23:10:09 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BSP_EEPROM
OBJECT MODULE PLACED IN .\Objects\bsp_eeprom.obj
COMPILER INVOKED BY: C:\Tools\MDK\C51\BIN\C51.EXE ..\code\bsp_eeprom.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Libary\De
                    -vice\CMS8S6990\Include;..\Libary\StdDriver\inc;..\code) DEBUG PRINT(.\Listings\bsp_eeprom.lst) TABS(2) OBJECT(.\Objects\
                    -bsp_eeprom.obj)

line level    source

   1          /*
   2          *********************************************************************************************************
   3          *
   4          * 模块名称 :
   5          * 文件名称 : bsp_eeprom.c
   6          * 版    本 : V1.0
   7          * 说    明 : 用于保存用户配置，掉电保存
   8          *
   9          * 修改记录 :
  10          *   版本号  日期         作者     说明
  11          *
  12          *********************************************************************************************************
  13          */
  14          #include "all.h"
  15          //
  16          //demo 测试代码
  17          #if 0
              void data_write()
              {
                u8 i;
                FLASH_UnLock();           //解锁
                addr= 0;
                Dtemp =0;
                FLASH_Erase(FLASH_DATA,addr);
                for(i = 0 ; i< 256 ; i++)   //连续256 bytes的写等待Flash执行完成
                  {
                    FLASH_Write(FLASH_DATA,0x3ff, 0xFF); //写地址使用最后的地址(任意地址都可以，建议用使用较少的地址)
                  }
                for(addr=0; addr<0x10; addr++)
                  {
                    FLASH_Write(FLASH_DATA,addr, Dtemp++);
                    temp = FLASH_Read(FLASH_DATA,addr);
                  }
                FLASH_Lock();           //锁
              }
              #endif
  37          
  38          /**********************************************************
  39          *函数名:First_ReadData
  40          *描述:上电读取数据，判断是否第一次上电，是第一次数据赋初始值。
  41          *输入参数:无
  42          *输出参数:无
  43          **********************************************************/
  44          
  45          void First_ReadData()
  46          {
  47   1        u8 temp1,temp2;           //临时数据保存
  48   1        //
  49   1        FLASH_UnLock();           //解锁
  50   1      firstread:
  51   1        temp1 = FLASH_Read(FLASH_DATA,0);
  52   1        temp2 = FLASH_Read(FLASH_DATA,1);
  53   1        //
C51 COMPILER V9.60.0.0   BSP_EEPROM                                                        06/05/2023 23:10:09 PAGE 2   

  54   1        if((temp1 == 0x55 ) && (temp2 == 0x2a)) //不是0x55 0xaa说明是一次上电。
  55   1          {
  56   2            VarINCnt =FLASH_Read(FLASH_DATA,0x2);
  57   2            VarOutCnt = FLASH_Read(FLASH_DATA,0x3);
  58   2            VarVoiceLevel = FLASH_Read(FLASH_DATA,0x4);
  59   2          }
  60   1        else
  61   1          {
  62   2            VarINCnt =1;
  63   2            VarOutCnt = 1;
  64   2            VarVoiceLevel = 1;
  65   2            //
  66   2            FLASH_Erase(FLASH_DATA,0);
  67   2            //for(i = 0 ;i< 3 ;i++)   //连续256 bytes的写等待Flash执行完成
  68   2            //{
  69   2            //  FLASH_Write(FLASH_DATA,0x4, 0xFF); //写地址使用最后的地址(任意地址都可以，建议用使用较少的地址)
  70   2            //}
  71   2            FLASH_Write(FLASH_DATA,0x0, 0x55);      //写入标志
  72   2            //temp = FLASH_Read(FLASH_DATA,0x0);
  73   2            FLASH_Write(FLASH_DATA,0x1, 0x2a);
  74   2            //temp = FLASH_Read(FLASH_DATA,0x1);
  75   2            //
  76   2            FLASH_Write(FLASH_DATA,0x2, VarINCnt);  //写入初始数据
  77   2            // temp = FLASH_Read(FLASH_DATA,0x2);
  78   2            FLASH_Write(FLASH_DATA,0x3, VarOutCnt);
  79   2            //temp = FLASH_Read(FLASH_DATA,0x3);
  80   2            FLASH_Write(FLASH_DATA,0x4, VarVoiceLevel);
  81   2            //temp = FLASH_Read(FLASH_DATA,0x4);
  82   2            //
  83   2            goto firstread;     //再次读取一次判断
  84   2          }
  85   1        FLASH_Lock();           //锁
  86   1      }
  87          /**********************************************************
  88          *函数名:First_ReadData
  89          *描述:上电读取数据，判断是否第一次上电，是第一次数据赋初始值。
  90          *输入参数:无
  91          *输出参数:无
  92          **********************************************************/
  93          void  save_INCnt(void)
  94          {
  95   1        FLASH_UnLock();           //解锁
  96   1        //
  97   1        //FLASH_Erase(FLASH_DATA,0x02);
  98   1        FLASH_Write(FLASH_DATA,0x2,VarINCnt); //写入数据
  99   1        //
 100   1        FLASH_Lock();           //锁
 101   1      }
 102          
 103          /**********************************************************
 104          *函数名:First_ReadData
 105          *描述:上电读取数据，判断是否第一次上电，是第一次数据赋初始值。
 106          *输入参数:无
 107          *输出参数:无
 108          **********************************************************/
 109          void  save_OutCnt(void)
 110          {
 111   1      
 112   1        FLASH_UnLock();           //解锁
 113   1        //
 114   1        //  FLASH_Erase(FLASH_DATA,0x3);
 115   1        FLASH_Write(FLASH_DATA,0x3, VarOutCnt); //写入数据
C51 COMPILER V9.60.0.0   BSP_EEPROM                                                        06/05/2023 23:10:09 PAGE 3   

 116   1        //
 117   1        FLASH_Lock();           //锁
 118   1      
 119   1      }
 120          
 121          
 122          /**********************************************************
 123          *函数名:First_ReadData
 124          *描述:上电读取数据，判断是否第一次上电，是第一次数据赋初始值。
 125          *输入参数:无
 126          *输出参数:无
 127          **********************************************************/
 128          void  save_VoiceLevel(void)
 129          {
 130   1        //uint8_t temp=0;
 131   1        FLASH_UnLock();           //解锁
 132   1        //
 133   1        //FLASH_Erase(FLASH_DATA,0x4);
 134   1        FLASH_Write(FLASH_DATA,0x4,VarVoiceLevel);  //写入数据
 135   1        //temp = FLASH_Read(FLASH_DATA,0x4);
 136   1        //
 137   1        FLASH_Lock();           //锁
 138   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    227    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
